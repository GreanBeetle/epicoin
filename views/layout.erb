<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="/css/bootstrap.css" type="text/css">
    <link rel="stylesheet" href="/css/styles.css" type="text/css">
    <link href="/css/multiple.css" rel="stylesheet">
    <script type="text/javascript" src="/js/jquery-3.2.1.js"></script>
    <script src="/js/jquery-cookie.js"></script>
    <script type="text/javascript" src="/js/scripts.js"></script>
    <script type="text/javascript" src="/js/multiple.js"></script>
    <script type="text/javascript" src="/js/terminal.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script type="text/javascript" src="js/typeit.min.js"></script>
    <script>
      $(function(){
        $(".draggable").draggable({
            containment: "#containment-wrapper",
            scroll: false,
        });
      });
    </script>
    <meta charset="utf-8">
    <title>BASECHAIN</title>
  </head>
  <body>
    <div class="container-fluid">
      <div style="text-align:center">
        <p class="logo">E P I C O I N</p>
<!-- MODAL WINDOW -->
        <button id="blockchainButton">What is a Blockchain?</button>
      </div>
      <div id="modalWin" class="modal">
        <div class="modal-content">
          <span class="close">&times;</span>
          <h4>What is a blockchain?</h4>
          <p>
          A chain of digital records. Each record is called a block. Each block is chained to both the previous and following block by a unique identifier known as a hash. A hash is a sequence of letters and numbers generated by solving a cryptographic puzzle. The process of solving these cryptographic puzzles is known as mining. Every time a puzzle is solved, a new hash and thereby new block is created.
          </p>
          <h4>History</h4>
          <strong>Cypherpunks. 80s and 90s</strong>
          <p>
          i. Cypherpunks were a loose-knit, international collection of activists in the eighties and nineties. They believed in cryptography and protective, privacy-enhancing technology as a means to political and social change.
          ii. They deeply mistrusted centralized authority of any sort and thought privacy necessary for a free and open society in the digital age. Governments, corporations, and other large entities, they thought, could not be trusted to grant us privacy.
          iii. Regarding code, the Cypherpunks believed someone had to write the software to defend this privacy, and said they were the folks to do that.
          iv. Their goal? To build a community free from the state and centralized authority. To do that, they needed digital money.
          </p>
          <h4>Problems with Digital Money</h4>
          <p>i. Authentication. Any person can control any other person’s account.
          ii. Reliability and Availability. If digital currency is stored on a central server and the server goes down, the money is lost. If a government shuts down the server, the currency dies.
          iii. Security. A central server is vulnerable to hacking. Bad actors and malicious parties might steal the cryptocurrency.
          </p>
          <h4>Answer to Problems with Digital Money</h4>
          <p>i. Decentralization. Kill the server.
          ii. This leads to peer-to-peer networks. I.e. information and data are distributed among a network of people and their computers. The act of sharing, distributing and storing data and information on a peer-to-peer network is called gossip.
          </p>

          <h4>Decentralization and Gossip Protocols</h4>
          <p>
          i. Gossip protocols are the processes and procedures used to share information on a peer-to-peer network.
          ii. A gossip protocol is leaderless. Everyone in the protocol is equal, replaceable.
          iii. Every person in the network connects to every other person to learn about the state of the network.
          iv. To send a transaction, we gossip to our peers and allow the transaction to propagate through the network, which can take time.
          v. There are problems with this!
          vi. A bad actor can do something random and screw up the information being shared. Or do something intentionally malicious, e.g. lie, say the sender was giving them money when in fact the sender intended the money go elsewhere.
          vii. This is no good in a monetary system.
          </p>
          <h4>Answer to Problems with Gossip Protocols</h4>
          <p>
          i. Cryptography.
          ii. More specifically, public-key cryptography. Public-key generates two keys for each person, one public and one private. You might think of this as a username and password. These become your identity on the peer-to-peer network.
          iii. At this point we can encrypt our messages, but there is still a big problem with this called the Double Spend.
          v. The double spend is when someone simultaneously sends the same information to different people. For example, Sophie has 10 epicoin. In simultaneous transactions, she grants two (or many) different people ownership of her 10 epicoin. In a gossip protocol, where information is slowly shared over a network, how is the network to know which transaction is true?
          </p>
          <h4>Cypherpunk Answer to Double Spend Problem</h4>
          <p>
          i. The Blockchain! E.g. a chain of digital records wherein each record (known as a block) is linked to both the previous and following records by something called a hash.
          ii. The progenitor of this idea is a person or group of people who used the pseudonym Satoshi Nakamoto. In 2008, Nakamoto published a white paper (a report, governmental or otherwise authoritative, proposing ideas about an issue) detailing both the philosophy behind and practical implementation of blockchains. E.g., the paper described protocol for a new, decentralized digital currency.
          iii. Satoshi Nakamoto went on to found Bitcoin. Depending on your source (e.g. wikipedia, TIME Magazine, etc.), Nakamoto’s true identity may or may not be known. Some sources claim the NSA identified him using stylometry (the study of linguistic style). Others say that his identity remains a mystery.  Whoever he is, he is said to be the world’s most reclusive billionaire, currently valued around $7 billion.
          iv. The biggest problem addressed by the white paper is the double-spend. E.g. in a peer-to-peer network, people can lie about when transactions happened.
          v. Therefor, each transaction on the network needs, without the aid of a centralized server, to be immutably (unchangeably) ordered and timestamped. Nakamoto accomplished this using blockchains.
          vi. And this is where it gets weird. Here, Nakamato proposed, is how one would create a decentralized time-stamping server. Each new transaction would be verified (or backed up) by computational work that solved a puzzle. The puzzles would be hard. It would be difficult and nearly impossible to fake solutions (known as proof of work) to the puzzles.
          vii. Each new block in the chain—-that is, each new transaction, each new message—-would essentially generate another puzzle in need of a solution. The first person to solve it would then be allowed to send their message or transaction, thus forcing a chronological ordering of transactions and disallowing simultaneous double-spends.
          </p>
          <h4>The Puzzles</h4>
          <p>
          i. The puzzles themselves are to find a nonce that modifies your message in such a way that the message, when fed into a hash function, produces something called a hash with a leading number of zeros.
          ii. This is what a hash looks like. ‘0000e3b0c44298fc1c149afbf4c8996fb92427ae41e4649’
          iii. And this is your message. ‘Hello world’
          iv. And this is the nonce. ‘Hello worAZ’
          v. The nonce transforms the message and makes it unique. When fed into a hash function (a programming function that takes an input, e.g. some words, and outputs a random string), the nonce allows the function to generate a hash that is close to impossible to reverse engineer. To you can create a hash from a nonce. But you cannot create a nonce from a hash.
          </p>
          <h4>Mining</h4>
          <p>
          i. The process of transforming a message to find a nonce that produces the desired hash is called mining.
          </p>
          <h4>The Blockchain</h4>
          <p>
          i. As noted, a blockchain is a series of interlinked digital records.
          ii. Each block in the chain is composed of at least four parts. A timestamp. A message. A previous hash. A proof of work (or new hash).
          iii. Put together, the parts of a blockchain look something like this.
          </p>
          <img src="">
          <p>
          iv. This, in turn, is distributed among the peer-to-peer network.
          v. In the early years of blockchain technology, each node (e.g. person, device, point of convergence) in the network retained a facsimile of the entire blockchain.
          vi. These days a node need only keep the blockchain long enough to verify its history and the authenticity of each transaction on the chain, after which the node may discard however much of the blockchain it wants.
          </p>
          <h4>Vocabulary</h4>
          <p>
          Basechain: A Base Chain is a pseudo-blockchain which uses a database instead of a true peer-to-peer network.
          Block. A file or record where data pertaining to a particular cryptocurrency is stored permanently.
          Blockchain. A chain of digital records. Each record in the chain is chronologically linked to both the previous and following record. These records are referred to as blocks, ergo, blockchain. by a unique identifier known as a hash.
          Client. A computer (like your laptop) or application (like, your Chrome browser) that accesses a server.
          Cryptocurrency. Encrypted, digital currency.
          Cryptography. The study and practice of techniques granting secure communication between people.
          Fiat. Fiat currency. Coins or paper money with no intrinsic value that are made legal by fiat (order) of the government. E.g. The dollar and the euro are fiat currencies.
          Genesis block. The first block in a blockchain. It does not have a previous hash.
          Gossip. Gossip protocol. The process of computer to computer communication among peer-to-peer networks.
          Hash. In cryptocurrency, a hash is a long sequence of letters and numbers. Here is an example. ‘e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855’. In blockchains, hashes must be preceded by a number of zeros, like so: ‘0000e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855.’ The person who first builds the blockchain decides how many zeros need to precede the hash.
          Mining. Recently, mining has come to mean the process by which transactions are verified, new nonces are discovered and, finally, new blocks added to the blockchain. Originally (in 2008, at the time of Nakamoto’s white paper), mining meant only the process of computationally difficult puzzle.
          Node. Intersection point. I.e. the point at which lines or paths connect, converge, or diverge. In computer terminology, a node is a device (e.g. your phone or laptop) or even data point within a larger network.
          Nonce. Some value that is used only once. A variable.
          Peer-to-peer network. Network of computer-to-computer relationships wherein data and info are shared.
          Public-key cryptography. Encryption technique that uses a paired public key (like a username) with a private key (such as a password).
          </p>
        </div>
      </div>
<!-- END MODAL WINDOW -->







      

      <%= yield %>
      <div class="dolphin draggable">
        <img id="dolphin-trippy" src="img/dolphintrippy.gif">
        <img id="dolphin" src="img/dolphin.gif">
      </div>
      <!--  -->
      <div class="big-text">
        <div class="letter draggable" id="b"><p>B</p></div>
        <div class="letter draggable" id="a"><p>A</p></div>
        <div class="letter draggable" id="s"><p>S</p></div>
        <div class="letter draggable" id="e"><p>E</p></div>
        <div class="letter draggable" id="c"><p>C</p></div>
        <div class="letter draggable" id="h"><p>H</p></div>
        <div class="letter draggable" id="a2"><p>A</p></div>
        <div class="letter draggable" id="i"><p>I</p></div>
        <div class="letter draggable" id="n"><p>N</p></div>
        <div class="letter draggable" id="i2"><p>I</p></div>
        <div class="letter draggable" id="s2"><p>S</p></div>
        <div class="letter draggable" id="t"><p>T</p></div>
        <div class="letter draggable" id="h2"><p>H</p></div>
        <div class="letter draggable" id="e2"><p>E</p></div>
        <div class="letter draggable" id="f"><p>F</p></div>
        <div class="letter draggable" id="u"><p>U</p></div>
        <div class="letter draggable" id="t2"><p>T</p></div>
        <div class="letter draggable" id="u2"><p>U</p></div>
        <div class="letter draggable" id="r"><p>R</p></div>
        <div class="letter draggable" id="e4"><p>E</p></div>
      </div>

    </div>

    <script>
      (function() {
        var multiple2 = new Multiple({
          selector: '.block-inner',
          background: 'linear-gradient(315deg, #f00e0f 20%, #fff 65%)'
        });
        var multiple = new Multiple({
          selector: '.letter.draggable',
          background: 'linear-gradient(315deg, #fff 20%, #f00e0f 65%)',
          affectText: '#fff'
        });
        new TypeIt('.logo', {
          strings: ["GRAPHIC", "GUI"],
          speed: 1000,
          breakLines: false
        });
      }());

      // MODAL WINDOW SCRIPT
      var modal = document.getElementById('modalWin');
      var btn = document.getElementById("blockchainButton");
      var span = document.getElementsByClassName("close")[0];
      btn.onclick = function() {
          modal.style.display = "block";
      }
      span.onclick = function() {
          modal.style.display = "none";
      }
      window.onclick = function(event) {
          if (event.target == modal) {
              modal.style.display = "none";
          }
      }
      // END MODAL WINDOW SCRIPT
    </script>
  </body>
</html>
